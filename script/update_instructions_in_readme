#!/usr/bin/env ruby
# encoding: UTF-8

$:.unshift File.expand_path('../../lib', __FILE__)

require 'net/http'
require 'uri'
require 'image_optim/bin_resolver/simple_version'

README_FILE = File.expand_path('../../README.markdown', __FILE__)

def fetch_url(url)
  res = Net::HTTP.get_response(URI(url))
  raise "Got #{res.class}" unless res.is_a?(Net::HTTPSuccess)
  res.body
end

def v(s)
  ImageOptim::BinResolver::SimpleVersion.new(s)
end

def update_instructions(text)
  latest_versions = Hash.new do |h, project|
    data = fetch_url("http://freecode.com/projects/#{project}/releases.atom")
    versions = data.scan(%r{<title>[a-z]+ (\d+(?:\.\d+)+)</title>}).map{ |m| v(m[0]) }
    h[project] = versions.max
  end

  updated = text.gsub(/([a-z]+)-(\d+(?:\.\d+)+)/) do |m|
    project, current = $1, v($2)
    latest = latest_versions[project]
    "#{project}-#{[current, latest].max}"
  end
  updated unless text == updated
end

readme = File.read(README_FILE)
if readme = update_instructions(readme)
  File.open(README_FILE, 'w') do |f|
    f.write readme
  end
else
  abort "Did not update instructions"
end
